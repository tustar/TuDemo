ext.deps = [:]
def deps = [:]
def versions = [:]
versions.android_gradle_plugin = '3.2.1'
versions.kotlin = '1.2.71'
versions.navigation = '1.0.0-alpha05'
versions.support = '1.0.0-rc01'
versions.arch_core = '2.0.0'
versions.constraint = '2.0.0-alpha2'
versions.lifecycle = '2.0.0'
versions.room = '2.1.0-alpha01'
versions.paging = '2.1.0-alpha01'
versions.work = '1.0.0-alpha08'
versions.material = '1.0.0'
//
versions.retrofit = "2.3.0"
versions.okhttp_logging_interceptor = "3.9.0"
versions.glide = "4.8.0"
//
versions.recyclerview_swipe = '1.0.2'
versions.android_gif_drawable = '1.2.7'
//
versions.junit = '4.12'
versions.espresso = '3.1.0-alpha3'
versions.atsl_runner='1.1.0-alpha3'

def build_versions = [:]
build_versions.min_sdk = 26
build_versions.target_sdk = 28
build_versions.compile_sdk = 28
build_versions.build_tools = '28.0.3'
ext.build_versions = build_versions

def kotlin = [:]
kotlin.stdlib = "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$versions.kotlin"
kotlin.test = "org.jetbrains.kotlin:kotlin-test-junit:$versions.kotlin"
kotlin.plugin = "org.jetbrains.kotlin:kotlin-gradle-plugin:$versions.kotlin"
kotlin.allopen = "org.jetbrains.kotlin:kotlin-allopen:$versions.kotlin"
kotlin.reflect = "org.jetbrains.kotlin:kotlin-reflect:$versions.kotlin"
kotlin.extensions = "org.jetbrains.kotlin:kotlin-android-extensions:$versions.kotlin"
deps.kotlin = kotlin

def navigation = [:]
navigation.safe_args_gradle_plugin = "android.arch.navigation:" +
        "navigation-safe-args-gradle-plugin:$versions.navigation"
navigation.fragment_ktx = "android.arch.navigation:navigation-fragment-ktx:$versions.navigation"
navigation.ui_ktx = "android.arch.navigation:navigation-ui-ktx:$versions.navigation"
navigation.testing_ktx = "android.arch.navigation:navigation-testing-ktx:$versions.navigation"
deps.navigation = navigation

def arch_core = [:]
arch_core.testing = "androidx.arch.core:core-testing:$versions.arch_core"
deps.arch_core = arch_core

def support = [:]
support.appcompat = "androidx.appcompat:appcompat:$versions.support"
support.cardview = "androidx.cardview:cardview:$versions.support"
support.recyclerview = "androidx.recyclerview:recyclerview:$versions.support"
support.palette = "androidx.palette:palette:$versions.support"
support.legacy = "androidx.legacy:legacy-support-v4:$versions.support"
support.percentlayout = "androidx.percentlayout:percentlayout:$versions.support"
deps.support = support

def constraint = [:]
constraint.layout = "androidx.constraintlayout:constraintlayout:$versions.constraint"
deps.constraint = constraint

def lifecycle = [:]
deps.lifecycle = lifecycle
lifecycle.extensions = "androidx.lifecycle:lifecycle-extensions:$versions.lifecycle"
lifecycle.livedata = "androidx.lifecycle:lifecycle-livedata:$versions.lifecycle"
lifecycle.runtime = "androidx.lifecycle:lifecycle-runtime:$versions.lifecycle"
lifecycle.compiler = "androidx.lifecycle:lifecycle-compiler:$versions.lifecycle"
lifecycle.java8 = "androidx.lifecycle:lifecycle-common-java8:$versions.lifecycle"
lifecycle.reactivestreams = "androidx.lifecycle:lifecycle-reactivestreams:$versions.lifecycle"
deps.lifecycle = lifecycle

def room = [:]
room.runtime = "androidx.room:room-runtime:$versions.room"
room.compiler = "androidx.room:room-compiler:$versions.room"
room.rxjava2 = "androidx.room:room-rxjava2:$versions.room"
room.testing = "androidx.room:room-testing:$versions.room"
deps.room = room

def paging = [:]
paging.runtime = "androidx.paging:paging-runtime:$versions.paging"
paging.common = "androidx.paging:paging-common:$versions.paging"
paging.rxjava2 = "android.arch.paging:rxjava2:1.0.0-rc1"
deps.paging = paging

def work = [:]
work.runtime = "android.arch.work:work-runtime:$versions.work"
work.testing = "android.arch.work:work-testing:$versions.work"
work.firebase = "android.arch.work:work-firebase:$versions.work"
work.runtime_ktx = "android.arch.work:work-runtime-ktx:$versions.work"
deps.work = work

def espresso =[:]
espresso.core = "androidx.test.espresso:espresso-core:$versions.espresso"
espresso.contrib = "androidx.test.espresso:espresso-contrib:$versions.espresso"
espresso.intents = "androidx.test.espresso:espresso-intents:$versions.espresso"
deps.espresso = espresso

def atsl = [:]
atsl.runner = "androidx.test:runner:$versions.atsl_runner"
atsl.rules = "androidx.test:rules:$versions.atsl_runner"
atsl.androidjunitrunner = "androidx.test.runner.AndroidJUnitRunner"
deps.atsl = atsl

def retrofit = [:]
retrofit.runtime = "com.squareup.retrofit2:retrofit:$versions.retrofit"
retrofit.gson = "com.squareup.retrofit2:converter-gson:$versions.retrofit"
retrofit.mock = "com.squareup.retrofit2:retrofit-mock:$versions.retrofit"
deps.retrofit = retrofit
deps.okhttp_logging_interceptor = "com.squareup.okhttp3:logging-interceptor:${versions.okhttp_logging_interceptor}"

def glide = [:]
glide.runtime = "com.github.bumptech.glide:glide:$versions.glide"
glide.compiler = "com.github.bumptech.glide:compiler:$versions.glide"
deps.glide = glide

deps.material = "com.google.android.material:material:$versions.material"
deps.recyclerview_swipe = "com.yanzhenjie:recyclerview-swipe:$versions.recyclerview_swipe"
deps.android_gif_drawable = "pl.droidsonroids.gif:android-gif-drawable:$versions.android_gif_drawable"
deps.android_gradle_plugin = "com.android.tools.build:gradle:$versions.android_gradle_plugin"
deps.junit = "junit:junit:$versions.junit"
ext.deps = deps

def addRepos(RepositoryHandler handler) {
    handler.jcenter { url "http://jcenter.bintray.com/" }
    handler.google()
    handler.maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
}

ext.addRepos = this.&addRepos